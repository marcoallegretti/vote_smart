rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return isSignedIn() && getUserData().role == 'admin';
    }

    function isModerator() {
      return isSignedIn() && (getUserData().role == 'moderator' || isAdmin());
    }

    function isProposer() {
      return isSignedIn() && (getUserData().role == 'proposer' || isModerator());
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isAdmin();
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }

    // Topics collection
    match /topics/{topicId} {
      allow read: if isSignedIn();
      allow write: if isModerator();
    }

    // Proposals collection
    match /proposals/{proposalId} {
      allow read: if isSignedIn();
      allow create: if isProposer();
      allow update: if isModerator() || 
        (isProposer() && resource.data.authorId == request.auth.uid);
      allow delete: if isModerator();
    }

    // Settings collection
    match /settings/{settingId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Vote sessions collection
    match /voteSessions/{sessionId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isModerator();
    }

    // Votes collection
    match /votes/{voteId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Votes cannot be modified or deleted
    }

    // Comments collection
    match /comments/{commentId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isOwner(resource.data.userId) || isModerator();
      allow delete: if isModerator();
    }

    // Groups collection
    match /groups/{groupId} {
      allow read: if isSignedIn();
      allow write: if isModerator();
    }

    // Delegations collection
    match /delegations/{delegationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && 
        request.resource.data.delegatorId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.delegatorId) || isModerator();
    }
  }
}